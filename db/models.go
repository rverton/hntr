// Code generated by sqlc. DO NOT EDIT.

package db

import (
	"database/sql"
	"time"

	"github.com/google/uuid"
	"github.com/jackc/pgtype"
)

type Automation struct {
	ID                   uuid.UUID `json:"id"`
	Name                 string    `json:"name"`
	Description          string    `json:"description"`
	BoxID                uuid.UUID `json:"box_id"`
	Command              string    `json:"command"`
	SourceContainer      string    `json:"source_container"`
	SourceTags           []string  `json:"source_tags"`
	DestinationContainer string    `json:"destination_container"`
	DestinationTags      []string  `json:"destination_tags"`
	IsPublic             bool      `json:"is_public"`
	CreatedAt            time.Time `json:"created_at"`
}

type AutomationEvent struct {
	ID            uuid.UUID    `json:"id"`
	BoxID         uuid.UUID    `json:"box_id"`
	AutomationID  uuid.UUID    `json:"automation_id"`
	Status        string       `json:"status"`
	Data          string       `json:"data"`
	UniqueResults int32        `json:"unique_results"`
	CreatedAt     time.Time    `json:"created_at"`
	FinishedAt    sql.NullTime `json:"finished_at"`
}

type Box struct {
	ID         uuid.UUID `json:"id"`
	Name       string    `json:"name"`
	Containers []string  `json:"containers"`
	CreatedAt  time.Time `json:"created_at"`
}

type GueFinishedJob struct {
	JobID      int64          `json:"job_id"`
	Queue      string         `json:"queue"`
	JobType    string         `json:"job_type"`
	Args       pgtype.JSON    `json:"args"`
	ErrorCount int32          `json:"error_count"`
	LastError  sql.NullString `json:"last_error"`
	StartedAt  sql.NullTime   `json:"started_at"`
	FinishedAt time.Time      `json:"finished_at"`
}

// 1
type GueJob struct {
	JobID      int64          `json:"job_id"`
	Priority   int16          `json:"priority"`
	RunAt      time.Time      `json:"run_at"`
	JobType    string         `json:"job_type"`
	Args       pgtype.JSON    `json:"args"`
	ErrorCount int32          `json:"error_count"`
	LastError  sql.NullString `json:"last_error"`
	Queue      string         `json:"queue"`
	CreatedAt  time.Time      `json:"created_at"`
	UpdatedAt  time.Time      `json:"updated_at"`
}

type Record struct {
	Data      string    `json:"data"`
	Tags      []string  `json:"tags"`
	BoxID     uuid.UUID `json:"box_id"`
	Container string    `json:"container"`
	CreatedAt time.Time `json:"created_at"`
}
